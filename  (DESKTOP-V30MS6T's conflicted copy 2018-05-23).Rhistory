devtools::document()
devtools::document()
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
bernlong
source('~/.active-rstudio-document', echo=TRUE)
dim(x)
dim(z)
dim(u)
dim(y)
devtools::document()
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
devtools::document()
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
Rcpp::sourceCpp('src/bernlong.cpp')
library(trcpp)
Rcpp::sourceCpp('src/bernlong.cpp')
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
d$beta
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
n <- 1000
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), m), rep(c(-1,1)/2, each = n))
z <- rep(rnorm(n), each = m)
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + z))
b <- rep(c(0,1), each = n)
z <- matrix(1, n*m, 1)
library(lme4)
n <- 10
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), each = m), rep(c(-0.5, 0.5), n))
z <- rep(rnorm(n), each = m)
x
z
library(lme4)
n <- 10
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), each = m), rep(c(-0.5, 0.5), n))
z <- rep(rnorm(n), each = m)
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + z))
b <- rep(c(0,1), n)
cbind(x,z,b)
d <- data.frame(y = y, x1 = x[,2], x2 = x[,3], cluster = rep(1:n, each = m))
s
d
library(lme4)
n <- 10
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), each = m), rep(c(-0.5, 0.5), n))
z <- rep(rnorm(n), each = m)
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + z))
b <- rep(c(0,1), n)
z <- matrix(1, n*m, 1)
d <- data.frame(y = y, x1 = x[,2], x2 = x[,3], cluster = rep(1:n, each = m))
m <- glmer(y ~ x1 + x2 + (1 | cluster), family = binomial, data = d)
summary(m)$coefficients
library(lme4)
n <- 1000
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), each = m), rep(c(-0.5, 0.5), n))
z <- rep(rnorm(n), each = m)
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + z))
b <- rep(c(0,1), n)
z <- matrix(1, n*m, 1)
d <- data.frame(y = y, x1 = x[,2], x2 = x[,3], cluster = rep(1:n, each = m))
m <- glmer(y ~ x1 + x2 + (1 | cluster), family = binomial, data = d)
summary(m)$coefficients
library(lme4)
n <- 1000
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), each = m), rep(c(-0.5, 0.5), n))
z <- rep(rnorm(n), each = m)
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + z))
b <- rep(c(0,1), n)
z <- matrix(1, n*m, 1)
d <- data.frame(y = y, x1 = x[,2], x2 = x[,3], cluster = rep(1:n, each = m))
m <- glmer(y ~ x1 + x2 + (1 | cluster), family = binomial, data = d)
summary(m)$coefficients
library(lme4)
n <- 1000
m <- 2
x <- cbind(1, rep(seq(-3, 3, length = n), each = m), rep(c(-0.5, 0.5), n))
z <- rep(rnorm(n), each = m)
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + z))
b <- rep(c(0,1), n)
z <- matrix(1, n*m, 1)
d <- data.frame(y = y, x1 = x[,2], x2 = x[,3], cluster = rep(1:n, each = m))
m <- glmer(y ~ x1 + x2 + (1 | cluster), family = binomial, data = d)
summary(m)$coefficients
update.packages()
library(trcpp)
bernlong
source('~/.active-rstudio-document', echo=TRUE)
z
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
devtools::document()
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
names(d)
d$phiv
m.glmer
unlist(m.glmer)
names(m.glmer)
m.glmer
class(m.glmer)
attributes(m.glmer)
names(attributes(m.glmer))
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
hist(rgamma(10000, shape = 50/2, rate = 50/2))
hist(rgamma(10000, shape = 10/2, rate = 10/2))
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
b
cbind(x,b)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
apply(d$beta, 2, mean)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
apply(d$beta, 2, sd)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, sd)
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
c
x
cbind(x,z)
cbind(x,b)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
source('~/.active-rstudio-document', echo=TRUE)
apply(d$beta, 2, mean)
mean(rgamma(10000, shape = 25/2, rate = 25/2))
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
hist(1/rgamma(100000, shape = 25/2, rate = 25/2))
?nt
rnt
?rt
rt(5,df = 0.5)
rt(5, df = 0.5)
rt(6, df = 1)
rt
rnt
library(trcpp)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
x <- rnorm(100000, 0, 2); hist(x[x > 0])
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
plot(d$phiv, type = "s")
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
Rcpp::sourceCpp('src/samp.cpp')
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
source('~/.active-rstudio-document', echo=TRUE)
lowertir
lowertri
ls()
rate
x
y
z
x
y
z
update.packages()
install.packages("rlang")
install.packages("Rcpp")
ls()
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
b
acf(d$beta)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(d$phiv, type = "s")
sd(d$phiv)
sd(1/rgamma(100000, shape = shape, rate = rate))
install.packages("emdbook")
source('~/.active-rstudio-document', echo=TRUE)
library(trcpp)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
update.packages()
apply(d$beta, 2, sd)/sqrt(nrow(d$beta))
install.packages("mcmcse")
library(mcmcse)
mcmcse::mcse.mat(d$beta)
mcmcse::mcse.mat(d$beta, method = "obm")
mcmcse::mcse.mat(d$beta, method = "tukey")
mcmcse::mcse.mat(d$beta, method = "bartlett")
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
mcmcse::mcse.mat(d$beta, method = "bm")
update.packages()
library(trcpp)
library(trcpp)
devtoold::document()
devtools::document()
library(trcpp)
devtools::document()
library(trcpp)
test
test(c(1,2))
library(trcpp)
test(c(1,2))
test(rnorm(2)
)
test(rnorm(2))
test(rnorm(2))
test(rnorm(2))
test(rnorm(2))
test(rnorm(2))
library(trcpp)
devtools::document()
library(trcpp)
test(rnorm(2))
test(rnorm(2))
test(rnorm(2))
test(c(2,1))
devtools::document()
devtools::document()
devtools::document()
devtools::document()
library(trcpp)
vswap
tst
test
x = 1:3
vswap(x, 0, 1)
test(x, 0, 1)
test(x, 1, 2)
x
test(1:5, 1, 2)
test(1:10, 1, 2)
test(1:10, 0, 9)
test(1:10, 0, 10)
//' @export
// [[Rcpp::export]]
install.packages("RcppGSL")
devtools::document()
devtools::document()
library(trcpp)
library(trcpp)
update.packages()
install.packages("magrittr")
install.packages("kableExtra")
update.packages()
ls()
rm(list = ls())
ls()
devtools::document()
devtools::document()
library(trcpp)
source('~/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
devtools::document()
library(trcpp)
update.packages()
ls()
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
d
d$phiv
d$phiv[1:3]
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
library(trcpp)
mtched
mtched.mean
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
mtched.mean
mtched.sd
mtched.sigm
update.packages()
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
permed.mean
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
mtched.mean
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
permed.sigm
d <- rbind(mtched.mean, mtched.sigm, permed.mean, permed.sigm)
d
?tidyr::gather
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
d
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
head)d_
head(d)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R', echo=TRUE)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
summary(d)
any
all
args(plogis)
ls()
d
dim(d)
rm(list = ls())
f <- function(...) {x*y}
f
f(x=2,y=3)
f
x = 3
y = 2
f()
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
library(trcpp)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
out
1/3 + 1/3 + 1/3
(1/3 + 1/3 + 1/3) == 1
evaluate(1/3)
eval(1/3)
(eval(1/3) + eval(1/3) + eval(1/3)) == 1
(eval(1/3) + eval(1/3) + eval(1/3)) < 1
(eval(1/3) + eval(1/3) + eval(1/3)) ? 1
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
update.packages()
x <- list()
for (i in 1:5) x[[i]] <- i
x
call(x, "cbind")
call("cbind", x)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
library(trcpp)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
out
out[[1]]
out[[2]]
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
out <- do.call("rbind", out)
out
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
out
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
# library(trcpp)
n <- 100
m <- 2
samp <- 100
burn <- 100
reps <- 2
sim <- function(seed, mtch) {
out.mean <- matrix(NA, reps, 4)
out.sigm <- matrix(NA, reps, 4)
for (i in 1:reps) {
set.seed(seed + i)
x <- cbind(1, rep(seq(-2, 2, length = n), each = m), rep(seq(-0.5, 0.5, length = m), n))
y <- rbinom(n*m, 1, plogis(x %*% c(0,1,1) + rep(rnorm(n), each = m)))
z <- matrix(1, n*m, 1)
if (mtch) {
b <- rep(0, n * m)
}
else {
b <- rep(c(0:(m - 1)), n)
for (j in 1:(m-1)) {
y[b == j] <- sample(y[b == j])
}
}
d <- bernlong(x, y, z, m, b, burn + samp, c(0,0,0), diag(3) * sqrt(10), c(shape, rate), 0.075, 7)
out.mean[i,] <- apply(cbind(d$beta, d$phiv)[(burn + 1):(samp + burn),], 2, mean)
out.sigm[i,] <- apply(cbind(d$beta, d$phiv)[(burn + 1):(samp + burn),], 2, sd)
}
out.mean <- data.frame(out.mean)
names(out.mean) <- c("b0","b1","b2","phi")
out.mean$stat = "mean"
out.sigm <- data.frame(out.sigm)
names(out.sigm) <- c("b0","b1","b2","phi")
out.sigm$stat = "sigm"
out <- rbind(out.mean, out.sigm)
out$mtch <- ifelse(mtch, "yes", "no")
out <- tidyr::gather(out, key = "parameter", value = "value", b0, b1, b2, phi)
return(out)
}
sigm <- c(0.25, 1, 4)
mtch <- c(TRUE,FALSE)
shape
rate
sim(101,mtch[1])
sim(101,mtch[2])
out
out[[(1-1)*2 + 1]] <- sim(101, mtch[1])
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
out
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
library(trcpp)
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
source('C:/Users/Timothy R. Johnson/Dropbox/Research/unmatched/logistic-test.R')
